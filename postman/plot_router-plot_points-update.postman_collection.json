{
	"info": {
		"_postman_id": "24df0af0-e4c5-4dea-9348-ca3b4340c206",
		"name": "Plot Router - Plot Points - Update",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Success Basic",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct id\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.eq(pm.variables.get(\"id\"));",
							"});",
							"",
							"pm.test(\"Has correct description\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.be.eq(\"new description\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"description\": \"new description\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success Full Object",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct id\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.eq(pm.variables.get(\"id\"));",
							"});",
							"",
							"pm.test(\"Has correct description\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.be.eq(\"new description\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							"",
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"prePP\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"summary\": \"new summary {{$timestamp}}\",\n\t\"description\": \"new description\",\n\t\"precedingPlotPointId\": \"{{prePP}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success Summary to Empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct summary\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.summary).to.eq(pm.globals.get(\"summary\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"    pm.globals.set(\"summary\", response.json().summary);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"summary\": \"\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success Summary to Null",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct summary\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.summary).to.eq(pm.globals.get(\"summary\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"    pm.globals.set(\"summary\", response.json().summary);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"summary\": null\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success Description to Empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct description\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary,",
							"\t        \"description\": \"my description is not empty\"",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"description\": \"\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success Description to Null",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct description\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary,",
							"\t        \"description\": \"my description is not empty\"",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"description\": null\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success PrePP From Null",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct id\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.eq(pm.variables.get(\"id\"));",
							"});",
							"",
							"pm.test(\"Has correct preId\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.precedingPlotPointId).to.be.eq(pm.variables.get(\"prePP\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary + \"a\"",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"prePP\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"precedingPlotPointId\": \"{{prePP}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Make PP1 Make PP2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36adbff-f3b9-409f-bb86-2b4f5edf62db",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"    ",
							"    pm.globals.set(\"pp2\", pm.response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f942701c-5ecf-467e-b18f-c2e5b362a668",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"pp1\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user\": \"{{user}}\",\n\t\"summary\": \"my-summary {{$timestamp}}\",\n\t\"precedingPlotPointId\": \"{{pp1}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success Update PP2 to use PP3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct id\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.eq(pm.variables.get(\"pp2\"));",
							"});",
							"",
							"pm.test(\"Has correct pre plot point\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.precedingPlotPointId).to.be.eq(pm.variables.get(\"pp3\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							"",
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"pp3\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{pp2}}\",\n\t\"precedingPlotPointId\": \"{{pp3}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Change User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct user\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.user).to.be.eq(pm.globals.get(\"user\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"user\": \"i am a new user\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Summary to Duplicate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has correct status\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.be.eq(\"BAD_REQUEST\");",
							"});",
							"",
							"pm.test(\"Has correct error\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.be.eq(\"400 BAD_REQUEST\");",
							"});",
							"",
							"pm.test(\"Has correct message\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"already exists\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							"",
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"summary\", response.json().summary);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"summary\": \"{{summary}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Summary Serialization",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Length is 0\", function () {",
							"    pm.response.to.have.header(\"Content-Length\");",
							"    pm.expect(pm.response.headers.get(\"Content-Length\")).to.eq(\"0\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"summary\": [\"\"]\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail PrePP Serialization",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Length is 0\", function () {",
							"    pm.response.to.have.header(\"Content-Length\");",
							"    pm.expect(pm.response.headers.get(\"Content-Length\")).to.eq(\"0\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"precedingPlotPointId\": [\"\"]\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Invalid PrePP",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0639199-6f4c-4a7a-a94b-5eb8ebb2caca",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.include(\"NOT_FOUND\");",
							"});",
							"",
							"pm.test(\"Has error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eq(\"404 NOT_FOUND\");",
							"});",
							"",
							"pm.test(\"Has message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"preceding plot point does not exist\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72c39346-20fa-4142-b061-7c3fec5f1cbf",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"precedingPlotPointId\": \"{{$guid}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail PrePP from another User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36adbff-f3b9-409f-bb86-2b4f5edf62db",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.include(\"BAD_REQUEST\");",
							"});",
							"",
							"pm.test(\"Has error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eq(\"400 BAD_REQUEST\");",
							"});",
							"",
							"pm.test(\"Has message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"preceding plot point is not by the same user\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "fd6e5322-97c3-48cc-95b6-50995bb3376c",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"prePP\", response.json().id);",
							"});",
							"",
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\") + \"1\",",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"precedingPlotPointId\": \"{{prePP}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail PrePP to Itself",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36adbff-f3b9-409f-bb86-2b4f5edf62db",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Has status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.include(\"BAD_REQUEST\");",
							"});",
							"",
							"pm.test(\"Has error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eq(\"400 BAD_REQUEST\");",
							"});",
							"",
							"pm.test(\"Has message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"preceded by itself\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "fd6e5322-97c3-48cc-95b6-50995bb3376c",
						"exec": [
							"var randSummary = \"a\" + Math.random().toString(36).substring(7);",
							"",
							"pm.sendRequest({",
							"    url: pm.variables.get(\"plotpoint\"),",
							"    method: \"POST\",",
							"    header: \"Content-Type:application/json\",",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            \"user\": pm.variables.get(\"user\"),",
							"\t        \"summary\": randSummary",
							"        })",
							"    }",
							"    }, function (err, response) {",
							"    pm.globals.set(\"id\", response.json().id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"{{id}}\",\n\t\"precedingPlotPointId\": \"{{id}}\"\n}"
				},
				"url": {
					"raw": "{{plotpoint}}",
					"host": [
						"{{plotpoint}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c72a2ceb-27fd-4abb-bc80-e21fd2475226",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "75bd988e-d536-4d35-a034-8c4d689b70f8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "db8dd50d-9dcb-443a-b547-ed2b77ac5677",
			"key": "plotpoint",
			"value": "http://localhost:8000/api/plotpoint",
			"type": "string"
		}
	]
}