version: 2.1

orbs:
  newman: postman/newman@0.0.2
  codecov: codecov/codecov@1.0.5

jobs:

  build_consumer_ui:
    docker:
      - image: circleci/node:10.16.3

    steps:
      - checkout
      - run:
          name: setup
          command: 'sudo npm i -g npm'
      - restore_cache:
          keys:
            - ui-consumer-npm-{{ .Branch }}-{{ checksum "ui/consumer/package-lock.json" }}
            - ui-consumer-npm-{{ .Branch }}-
            - ui-consumer-npm-

      - run:
          name: ui-consumer-npm-audit
          command: 'cd ui/consumer && npm audit'
      - run:
          name: ui-consumer-npm-install
          command: 'cd ui/consumer && npm i'

      - save_cache:
          key: ui-consumer-npm-{{ .Branch }}-{{ checksum "ui/consumer/package-lock.json" }}
          paths:
            - ./node_modules

      - run:
          name: ui-consumer-npm-test
          command: 'cd ui/consumer && npm t'

      - run:
          name: ui-consumer-npm-build
          command: 'cd ui/consumer && npm run build'
      
      - persist_to_workspace:
          root: ui/consumer
          paths:
            - build/

  build_pp:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch

    steps:
      - checkout
      - restore_cache:
          keys:
            - pp-mvn-{{ .Branch }}-{{ checksum "api/plotpoints/pom.xml" }}
            - pp-mvn-{{ .Branch }}-
            - pp-mvn-

      - run:
          name: pp-mvn-dependencies
          command: 'cd api/plotpoints && mvn dependency:go-offline'

      - save_cache:
          paths:
            - ~/.m2
          key: pp-mvn-{{ .Branch }}-{{ checksum "api/plotpoints/pom.xml" }}

      - run:
          name: generate_db_connection_file
          command: 'cd api/plotpoints && sh setup_db.sh'

      - run:
          name: pp-mvn-package
          command: 'cd api/plotpoints && mvn package'

      - persist_to_workspace:
          root: api/plotpoints/target
          paths:
            - plotpoints.jar

      - store_artifacts:
          path: api/plotpoints/target/plotpoints.jar
          destination: /jars/plotpoints.jar

      - run:
          name: pp-coverage-report
          command: 'cd api/plotpoints && mvn jacoco:prepare-agent jacoco:report'

      - codecov/upload:
          flags: pp_unit_test
          file: 'api/plotpoints/target/site/jacoco/jacoco.xml'

  run_pp:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch

    steps:
      - checkout
      - attach_workspace:
          at: /tmp

      - run:
          name: pp-run-jar
          command: 'java -jar /tmp/plotpoints.jar'
          background: true

  test_pp:
    executor: newman/postman-newman-docker

    steps:
      - checkout
      - run:
          name: ls
          command: 'ls -l postman'
      - newman/newman-run:
          collection: .postman/plot_router-plot_points-get-all.postman_collection.json

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_consumer_ui
      - build_pp
#      - run_pp:
#          requires:
#            - build_pp
#      - test_pp:
#          requires:
#            - run_pp

  # TODO Add security tests ect
#  staging:
#    filters:
#      branches:
#        only:
#          - staging
#    jobs:
#      - build_consumer_ui
#      - build_pp

  nightly:
    triggers:
      - schedule:
          cron: "0 3 * * *" # Run nightly at 0300 + 15
          filters:
            branches:
              only:
                - master
    jobs:
#      - test_pp
      - build_consumer_ui
      - build_pp
